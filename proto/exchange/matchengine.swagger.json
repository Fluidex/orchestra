{
  "swagger": "2.0",
  "info": {
    "title": "proto/exchange/matchengine.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Matchengine"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/exchange/action/assets": {
      "get": {
        "operationId": "Matchengine_AssetList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineAssetListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/balances/{userId}": {
      "get": {
        "operationId": "Matchengine_BalanceQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineBalanceQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "assets",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/batchorders/{market}": {
      "post": {
        "operationId": "Matchengine_BatchOrderPut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineBatchOrderPutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reset": {
                  "type": "boolean"
                },
                "orders": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/matchengineOrderPutRequest"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/cancelorder/{market}/{userId}/{orderId}": {
      "post": {
        "operationId": "Matchengine_OrderCancel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineOrderInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/cancelorders/{market}/{userId}": {
      "post": {
        "operationId": "Matchengine_OrderCancelAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineOrderCancelAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/depth/{market}/{limit}": {
      "get": {
        "summary": "rpc OrderBook(OrderBookRequest) returns (OrderBookResponse) {}",
        "operationId": "Matchengine_OrderBookDepth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineOrderBookDepthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/markets": {
      "get": {
        "operationId": "Matchengine_MarketList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineMarketListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/order": {
      "post": {
        "summary": "rpc AssetSummary(AssetSummaryRequest) returns (AssetSummaryResponse) {}",
        "operationId": "Matchengine_OrderPut",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineOrderInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/matchengineOrderPutRequest"
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/orders/{market}/{userId}": {
      "get": {
        "operationId": "Matchengine_OrderQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineOrderQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/registeruser": {
      "post": {
        "operationId": "Matchengine_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineUserInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/matchengineUserInfo"
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/transfer": {
      "post": {
        "operationId": "Matchengine_Transfer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineTransferResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/matchengineTransferRequest"
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    },
    "/api/exchange/action/updatebalance": {
      "post": {
        "operationId": "Matchengine_BalanceUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/matchengineBalanceUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/matchengineBalanceUpdateRequest"
            }
          }
        ],
        "tags": [
          "Matchengine"
        ]
      }
    }
  },
  "definitions": {
    "AssetListResponseAssetInfo": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "chainId": {
          "type": "integer",
          "format": "int32"
        },
        "tokenAddress": {
          "type": "string"
        },
        "precision": {
          "type": "integer",
          "format": "int64"
        },
        "logoUri": {
          "type": "string"
        },
        "innerId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BalanceQueryResponseAssetBalance": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "available": {
          "type": "string"
        },
        "frozen": {
          "type": "string"
        }
      }
    },
    "MarketListResponseMarketInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "base": {
          "type": "string"
        },
        "quote": {
          "type": "string"
        },
        "feePrecision": {
          "type": "integer",
          "format": "int64"
        },
        "amountPrecision": {
          "type": "integer",
          "format": "int64"
        },
        "pricePrecision": {
          "type": "integer",
          "format": "int64"
        },
        "minAmount": {
          "type": "string"
        }
      }
    },
    "MarketSummaryResponseMarketSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "askCount": {
          "type": "integer",
          "format": "int32"
        },
        "askAmount": {
          "type": "string"
        },
        "bidCount": {
          "type": "integer",
          "format": "int32"
        },
        "bidAmount": {
          "type": "string"
        },
        "tradeCount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "OrderBookDepthResponsePriceInfo": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "matchengineAssetListResponse": {
      "type": "object",
      "properties": {
        "assetLists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetListResponseAssetInfo"
          }
        }
      }
    },
    "matchengineBalanceQueryResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BalanceQueryResponseAssetBalance"
          }
        }
      }
    },
    "matchengineBalanceUpdateRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "asset": {
          "type": "string"
        },
        "business": {
          "type": "string"
        },
        "businessId": {
          "type": "string",
          "format": "uint64"
        },
        "delta": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "logMetadata": {
          "$ref": "#/definitions/matchengineEthLogMetadata"
        }
      }
    },
    "matchengineBalanceUpdateResponse": {
      "type": "object"
    },
    "matchengineBatchOrderPutResponse": {
      "type": "object",
      "properties": {
        "resultCode": {
          "$ref": "#/definitions/matchengineResultCode"
        },
        "errorMessage": {
          "type": "string"
        },
        "orderIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "matchengineDebugDumpResponse": {
      "type": "object"
    },
    "matchengineDebugReloadResponse": {
      "type": "object"
    },
    "matchengineDebugResetResponse": {
      "type": "object"
    },
    "matchengineEthLogMetadata": {
      "type": "object",
      "properties": {
        "blockNumber": {
          "type": "string",
          "format": "uint64"
        },
        "txHash": {
          "type": "string"
        },
        "logIndex": {
          "type": "string"
        }
      }
    },
    "matchengineMarketListResponse": {
      "type": "object",
      "properties": {
        "markets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketListResponseMarketInfo"
          }
        }
      }
    },
    "matchengineMarketSummaryResponse": {
      "type": "object",
      "properties": {
        "marketSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketSummaryResponseMarketSummary"
          }
        }
      }
    },
    "matchengineOrderBookDepthResponse": {
      "type": "object",
      "properties": {
        "asks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderBookDepthResponsePriceInfo"
          }
        },
        "bids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderBookDepthResponsePriceInfo"
          }
        }
      }
    },
    "matchengineOrderCancelAllResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "matchengineOrderInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "market": {
          "type": "string"
        },
        "orderSide": {
          "$ref": "#/definitions/matchengineOrderSide"
        },
        "orderType": {
          "$ref": "#/definitions/matchengineOrderType"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "createTime": {
          "type": "number",
          "format": "double"
        },
        "updateTime": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "takerFee": {
          "type": "string"
        },
        "makerFee": {
          "type": "string"
        },
        "remain": {
          "type": "string"
        },
        "finishedBase": {
          "type": "string"
        },
        "finishedQuote": {
          "type": "string"
        },
        "finishedFee": {
          "type": "string"
        },
        "postOnly": {
          "type": "boolean"
        }
      }
    },
    "matchengineOrderPutRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "market": {
          "type": "string"
        },
        "orderSide": {
          "$ref": "#/definitions/matchengineOrderSide"
        },
        "orderType": {
          "$ref": "#/definitions/matchengineOrderType"
        },
        "amount": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "quoteLimit": {
          "type": "string"
        },
        "takerFee": {
          "type": "string"
        },
        "makerFee": {
          "type": "string"
        },
        "postOnly": {
          "type": "boolean"
        },
        "signature": {
          "type": "string",
          "description": "(ignored for Market orders)."
        }
      }
    },
    "matchengineOrderQueryResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/matchengineOrderInfo"
          }
        }
      }
    },
    "matchengineOrderSide": {
      "type": "string",
      "enum": [
        "ASK",
        "BID"
      ],
      "default": "ASK"
    },
    "matchengineOrderType": {
      "type": "string",
      "enum": [
        "LIMIT",
        "MARKET"
      ],
      "default": "LIMIT"
    },
    "matchengineResultCode": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "INTERNAL_ERROR"
      ],
      "default": "SUCCESS"
    },
    "matchengineSimpleSuccessResponse": {
      "type": "object"
    },
    "matchengineTransferRequest": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        },
        "asset": {
          "type": "string"
        },
        "delta": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "matchengineTransferResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "asset": {
          "type": "string"
        },
        "balanceFrom": {
          "type": "string"
        }
      }
    },
    "matchengineUserInfo": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "l1Address": {
          "type": "string"
        },
        "l2Pubkey": {
          "type": "string"
        },
        "logMetadata": {
          "$ref": "#/definitions/matchengineEthLogMetadata"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
