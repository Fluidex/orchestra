syntax = "proto3";
option go_package = "./";

package rollup_state;

import "google/api/annotations.proto";

service RollupState {
  rpc L2BlocksQuery(L2BlocksQueryRequest) returns (L2BlocksQueryResponse) {
    option (google.api.http) = {
      get : "/explorer/api/l2_blocks"
    };
  }

  rpc L2BlockQuery(L2BlockQueryRequest) returns (L2BlockQueryResponse) {
    option (google.api.http) = {
      get : "/explorer/api/l2_block/{block_id}"
    };
  }

  rpc TokenBalanceQuery(TokenBalanceQueryRequest)
      returns (TokenBalanceQueryResponse) {
    option (google.api.http) = {
      post : "/explorer/api/token_balance/{account_id}/{token_id}"
      body : "*"
    };
  }
}

message L2BlocksQueryRequest {
  int64 offset = 1;
  int64 limit = 2;
}

message L2BlocksQueryResponse {
  int64 total = 1;
  repeated BlockSummary blocks = 2;
  message BlockSummary {
    int64 block_height = 1;
    string merkle_root = 2;
    double block_time = 3;
  }
}

message L2BlockQueryRequest { int64 block_id = 1; }

message L2BlockQueryResponse {
  uint64 tx_num = 1;
  uint64 real_tx_num = 2;
  double created_time = 3;
  BlockStatus status = 4;
  string new_root = 5;
  string l1_tx_hash = 6;
  repeated EncodedTx txs = 7;
  repeated DecodedTx decoded_txs = 8;
  repeated TxType txs_type = 9;
  message EncodedTx {
    repeated string detail = 1; // TODO: Fixes to decoding TX in issue #132.
  }
  message DecodedTx {
    optional DepositTx deposit_tx = 1;
    optional WithdrawTx withdraw_tx = 2;
    optional TransferTx transfer_tx = 3;
    optional SpotTradeTx spot_trade_tx = 4;
  }
}

message TokenBalanceQueryRequest {
  uint32 account_id = 1;
  uint32 token_id = 2;
  string token_address = 3;
  string token_name = 4;
}

message TokenBalanceQueryResponse {
  string balance = 1;
  string balance_raw = 2;
  uint32 precision = 3;
}

message DepositTx {
  uint32 account_id = 1;
  uint32 token_id = 2;
  string amount = 3;
}

message WithdrawTx {
  uint32 account_id = 1;
  uint32 token_id = 2;
  string amount = 3;
  string old_balance = 4;
}

message TransferTx {
  uint32 from = 1;
  uint32 to = 2;
  uint32 token_id = 3;
  string amount = 4;
}

message SpotTradeTx {
  uint32 order1_account_id = 1;
  uint32 order2_account_id = 2;
  uint32 token_id_1to2 = 3;
  uint32 token_id_2to1 = 4;
  string amount_1to2 = 5;
  string amount_2to1 = 6;
}

enum BlockStatus {
  UNCOMMITED = 0;
  COMMITED = 1;
  VERIFIED = 2;
}

enum TxType {
  NOP = 0;
  DEPOSIT = 1;
  TRANSFER = 2;
  WITHDRAW = 3;
  PLACE_ORDER = 4;
  SPOT_TRADE = 5;
}
